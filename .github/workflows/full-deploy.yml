name: "Full Deploy: Templates + Serverless"

on:
  workflow_dispatch:

jobs:
  deploy-all:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Twilio CLI and authenticate
        run: |
          npm install -g twilio-cli
          twilio plugins:install @twilio-labs/plugin-serverless

        env:
          TWILIO_ACCOUNT_SID: ${{ secrets.ACCOUNT_SID }}
          TWILIO_AUTH_TOKEN: ${{ secrets.AUTH_TOKEN }}

      - name: Upload and Approve Content Templates
        run: |
          mkdir -p .env-temp
          ENV_FILE=".env-temp/serverless.env"

          echo "ACCOUNT_SID=${{ secrets.ACCOUNT_SID }}" >> $ENV_FILE
          echo "AUTH_TOKEN=${{ secrets.AUTH_TOKEN }}" >> $ENV_FILE
          echo "MERCADO_PAGO_ACCESS_TOKEN=${{ secrets.MERCADO_PAGO_ACCESS_TOKEN }}" >> $ENV_FILE
          echo "WHATSAPP_FROM_NUMBER=${{ secrets.WHATSAPP_FROM_NUMBER }}" >> $ENV_FILE

          for file in content-templates/*.json; do
            NAME=$(basename "$file" .json | tr 'a-z' 'A-Z')
            echo "Uploading template: $NAME"

            # Extract the 'types' object (compact JSON)
            TYPES_JSON=$(jq -c .types "$file")

            # Create (or re-create) the Content using correct flags
            TEMPLATE_OUTPUT=$(twilio api:content:v1:content:create \
              --friendly-name "$NAME" \
              --language pt_BR \
              --types "$TYPES_JSON" \
              --output json)

            echo "Raw content create output:"
            echo "$TEMPLATE_OUTPUT"

            SID=$(echo "$TEMPLATE_OUTPUT" | jq -r .sid)
            if [ -z "$SID" ] || [ "$SID" = "null" ]; then
              echo "❌ Failed to create content for $NAME. Output above."
              exit 1
            fi
            echo "$NAME SID: $SID"

            # Submit WhatsApp approval (Utility)
            twilio api:content:v1:approvals:create \
              --content-sid "$SID" \
              --channel-type whatsapp \
              --category utility

            # Map to env var names used by your Functions
            if [[ "$NAME" == "PIX" ]]; then
              echo "PAYMENT_CONTENT_SID=$SID" >> $ENV_FILE
            elif [[ "$NAME" == "CARD" ]]; then
              echo "CREDIT_CARD_CONTENT_SID=$SID" >> $ENV_FILE
            elif [[ "$NAME" == "STATUS" ]]; then
              echo "ORDER_STATUS_CONTENT_SID=$SID" >> $ENV_FILE
            fi
          done

      - name: Deploy Serverless Functions
        working-directory: mercado-pago-serverless
        run: |
          cp ../.env-temp/serverless.env .env
          twilio serverless:deploy \
            --env .env \
            --service-name mercado-pago-serverless \
            --force
