name: "Full Deploy: Templates + Serverless"

on:
  workflow_dispatch:

jobs:
  deploy-all:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y jq

      - name: Install Twilio CLI (for serverless only) and set env auth
        run: |
          npm install -g twilio-cli
          twilio plugins:install @twilio-labs/plugin-serverless
        env:
          TWILIO_ACCOUNT_SID: ${{ secrets.ACCOUNT_SID }}
          TWILIO_AUTH_TOKEN: ${{ secrets.AUTH_TOKEN }}

      - name: Upload and Approve Content Templates (JSON POST)
        env:
          TW_ACC: ${{ secrets.ACCOUNT_SID }}
          TW_AUTH: ${{ secrets.AUTH_TOKEN }}
          WHATSAPP_FROM_NUMBER: ${{ secrets.WHATSAPP_FROM_NUMBER }}
          MP_TOKEN: ${{ secrets.MERCADO_PAGO_ACCESS_TOKEN }}
        run: |
          set -euo pipefail
          mkdir -p .env-temp
          ENV_FILE=".env-temp/serverless.env"

          echo "ACCOUNT_SID=${TW_ACC}" >> $ENV_FILE
          echo "AUTH_TOKEN=${TW_AUTH}" >> $ENV_FILE
          echo "MERCADO_PAGO_ACCESS_TOKEN=${MP_TOKEN}" >> $ENV_FILE
          echo "WHATSAPP_FROM_NUMBER=${WHATSAPP_FROM_NUMBER}" >> $ENV_FILE

          for file in content-templates/*.json; do
            NAME=$(basename "$file" .json | tr 'a-z' 'A-Z')
            echo "Creating content from file: $file (NAME=$NAME)"

            CREATE_RESP=$(curl -sS -u "${TW_ACC}:${TW_AUTH}" \
              -H 'Content-Type: application/json' \
              -H 'Accept: application/json' \
              --data-binary @"$file" \
              https://content.twilio.com/v1/Content)

            echo "Raw create response: $CREATE_RESP"
            SID=$(echo "$CREATE_RESP" | jq -r '.sid // empty')
            if [ -z "$SID" ]; then
              echo "❌ Failed to create Content for $NAME"
              exit 1
            fi
            echo "$NAME SID: $SID"

            # Submit WhatsApp approval (Utility)
            APPROVE_RESP=$(curl -sS -u "${TW_ACC}:${TW_AUTH}" \
              -H 'Content-Type: application/x-www-form-urlencoded' \
              -H 'Accept: application/json' \
              -X POST "https://content.twilio.com/v1/Content/${SID}/Approval" \
              -d ChannelType=whatsapp \
              -d Category=utility)
            echo "Approval response: $APPROVE_RESP"

            # Map to env vars your Functions expect
            if [[ "$NAME" == "PIX" ]]; then
              echo "PAYMENT_CONTENT_SID=$SID" >> $ENV_FILE
            elif [[ "$NAME" == "CARD" ]]; then
              echo "CREDIT_CARD_CONTENT_SID=$SID" >> $ENV_FILE
            elif [[ "$NAME" == "STATUS" ]]; then
              echo "ORDER_STATUS_CONTENT_SID=$SID" >> $ENV_FILE
            fi
          done

      - name: Deploy Serverless Functions
        working-directory: mercado-pago-serverless
        run: |
          cp ../.env-temp/serverless.env .env
          twilio serverless:deploy \
            --env .env \
            --service-name mercado-pago-serverless \
            --force
