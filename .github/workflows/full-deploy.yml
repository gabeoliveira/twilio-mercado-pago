name: "Full Deploy: Templates + Serverless"

on:
  workflow_dispatch:

jobs:
  deploy-all:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Twilio CLI
        run: |
          npm install -g twilio-cli
          twilio plugins:install @twilio-labs/plugin-serverless
          twilio config:set account-sid ${{ secrets.ACCOUNT_SID }}
          twilio config:set auth-token ${{ secrets.AUTH_TOKEN }}

      - name: Upload and Approve Content Templates
        run: |
          mkdir -p .env-temp
          ENV_FILE=".env-temp/serverless.env"

          echo "ACCOUNT_SID=${{ secrets.ACCOUNT_SID }}" >> $ENV_FILE
          echo "AUTH_TOKEN=${{ secrets.AUTH_TOKEN }}" >> $ENV_FILE
          echo "MERCADO_PAGO_ACCESS_TOKEN=${{ secrets.MERCADO_PAGO_ACCESS_TOKEN }}" >> $ENV_FILE
          echo "WHATSAPP_FROM_NUMBER=${{ secrets.WHATSAPP_FROM_NUMBER }}" >> $ENV_FILE

          for file in content-templates/*.json; do
            NAME=$(basename "$file" .json | tr 'a-z' 'A-Z')
            echo "Uploading template: $NAME"

            TYPES_JSON=$(jq -c .types "$file")

            TEMPLATE_OUTPUT=$(twilio api:content:v1:content:create \
              --content-language pt_BR \
              --friendly-name "$NAME" \
              --channel-whatsapp "{\"types\":$TYPES_JSON}" \
              --json)

            SID=$(echo "$TEMPLATE_OUTPUT" | jq -r .sid)

            echo "$NAME SID: $SID"

            twilio api:content:v1:content:approval:create \
              --path-content-sid "$SID" \
              --channel-type whatsapp \
              --category utility

            if [[ "$NAME" == "PIX" ]]; then
              echo "PAYMENT_CONTENT_SID=$SID" >> $ENV_FILE
            elif [[ "$NAME" == "CARD" ]]; then
              echo "CREDIT_CARD_CONTENT_SID=$SID" >> $ENV_FILE
            elif [[ "$NAME" == "STATUS" ]]; then
              echo "ORDER_STATUS_CONTENT_SID=$SID" >> $ENV_FILE
            fi
          done

      - name: Deploy Serverless Functions
        working-directory: mercado-pago-serverless
        run: |
          cp ../.env-temp/serverless.env .env
          twilio serverless:deploy \
            --env .env \
            --service-name mercado-pago-serverless \
            --force
