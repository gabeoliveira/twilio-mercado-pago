# .github/workflows/deploy-functions.yml
name: Deploy Twilio Serverless

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy-functions:
    runs-on: ubuntu-latest
    # principle of least privilege
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download template env (if exists)
        uses: actions/download-artifact@v4
        with:
          name: templates-env
          path: mercado-pago-serverless
        continue-on-error: true

      - name: Install Twilio CLI
        run: |
          npm install -g twilio-cli
          twilio plugins:install @twilio-labs/plugin-serverless

      - name: Build .env and Deploy
        working-directory: mercado-pago-serverless
        env:
          # Twilio CLI auth via env (no profile)
          TWILIO_ACCOUNT_SID: ${{ secrets.ACCOUNT_SID }}
          TWILIO_AUTH_TOKEN: ${{ secrets.AUTH_TOKEN }}

          # Runtime secrets
          ACCOUNT_SID: ${{ secrets.ACCOUNT_SID }}
          AUTH_TOKEN: ${{ secrets.AUTH_TOKEN }}
          MERCADO_PAGO_ACCESS_TOKEN: ${{ secrets.MERCADO_PAGO_ACCESS_TOKEN }}
          WHATSAPP_FROM_NUMBER: ${{ secrets.WHATSAPP_FROM_NUMBER }}
        run: |
          set -euo pipefail

          # Start with SIDs from the templates workflow if present
          cp ./templates.env .env || true

          # Append runtime secrets (values not echoed)
          cat <<EOF >> .env
          ACCOUNT_SID=${ACCOUNT_SID}
          AUTH_TOKEN=${AUTH_TOKEN}
          MERCADO_PAGO_ACCESS_TOKEN=${MERCADO_PAGO_ACCESS_TOKEN}
          WHATSAPP_FROM_NUMBER=${WHATSAPP_FROM_NUMBER}
          EOF

          # Sanity check: ensure .env is not empty
          if [[ ! -s .env ]]; then
            echo "❌ .env is empty. Did the templates artifact fail to download and/or secrets are missing?"
            exit 1
          fi

          # Optional: validate Content SID shape if they exist (won't reveal values)
          if grep -q '^PAYMENT_CONTENT_SID=' .env; then
            if ! grep -Eq '^PAYMENT_CONTENT_SID=HX[0-9A-Za-z]{32}$' .env; then
              echo "⚠️ PAYMENT_CONTENT_SID present but may be a placeholder."
            fi
          fi
          if grep -q '^CREDIT_CARD_CONTENT_SID=' .env; then
            if ! grep -Eq '^CREDIT_CARD_CONTENT_SID=HX[0-9A-Za-z]{32}$' .env; then
              echo "⚠️ CREDIT_CARD_CONTENT_SID present but may be a placeholder."
            fi
          fi
          if grep -q '^ORDER_STATUS_CONTENT_SID=' .env; then
            if ! grep -Eq '^ORDER_STATUS_CONTENT_SID=HX[0-9A-Za-z]{32}$' .env; then
              echo "⚠️ ORDER_STATUS_CONTENT_SID present but may be a placeholder."
            fi
          fi

          echo "Built .env with $(wc -l < .env) lines (values hidden)"

          # Deploy (Twilio CLI auth via env)
          twilio serverless:deploy \
            --env .env \
            --service-name mercado-pago-serverless \
            --force

          # Cleanup sensitive file
          shred -u .env || rm -f .env
